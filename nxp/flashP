#!/bin/sh
# ${1} is number of user partition
# ${2} is size of first user partition, if enabled
# ${3} is size of second user partition, if enabled
# ${4} is the device
# ${5} is the dtb for solo/dl
# ${6} is the dtb for quad
# ${7} is the NOVAsomParams file
# ${8} is the ramdisk size


cd /Devel/NOVAsdk/Utils/nxp
. ./functions_P
. ../version
. ../functions.sh
clear_resfile

DISK=${4}
sync
sudo umount ${DISK}* >/dev/null 2>&1
sync
BOOT_IS="u-boot-novasomP-2015.04"
KERNEL_IS="linux-5.7.19_P"

SPL_FILE="/Devel/NOVAsdk/Bootloaders/${BOOT_IS}/SPL"
UBOOT_IMG="/Devel/NOVAsdk/Bootloaders/${BOOT_IS}/u-boot.img"
KERNEL="/Devel/NOVAsdk/Kernels/${KERNEL_IS}/arch/arm/boot/zImage"
DTB_FILESDL="/Devel/NOVAsdk/DtbUserWorkArea/${5}"
DTB_FILEQ="/Devel/NOVAsdk/DtbUserWorkArea/${6}"
UINITRD="/Devel/NOVAsdk/Deploy/uInitrd"
NOVASOMPARAMS="/Devel/NOVAsdk/Utils/BootParameters/$7"
DEPLOY_DIR="/Devel/NOVAsdk/Deploy"
RAMDISK_SIZE="$8"

exit_if_error 0 "NOVASOMPARAMS is $NOVASOMPARAMS"

FILES="$SPL_FILE $UBOOT_IMG $KERNEL $DTB_FILESDL $DTB_FILEQ $UINITRD $NOVASOMPARAMS"
for i in ${FILES}; do
	if ! [ -f ${i} ]; then
		exit_if_error 1 "File ${i} not found"
	fi
done

if [ ! -b ${DISK} ]; then
	exit_if_error 1 "${DISK} not found"
fi

sudo umount ${DISK}* >/dev/null 2>&1
sleep 1
sudo sgdisk -Z ${DISK} >/dev/null 2>&1
sudo dd if=/dev/zero of=${DISK} bs=4M count=1; sync
sudo dd if=${SPL_FILE} of=${DISK} bs=1k seek=1; sync
sync
exit_if_error 0 "uSD cleared and uboot written"

format_usd ${1} ${2} ${3} ${DISK}
exit_if_error $? "Format uSD"

rm -rf tmpmount
mkdir tmpmount
sleep 1
sudo mount ${DISK}1 tmpmount
exit_if_error $? "Mount uSD"

sudo cp ${UBOOT_IMG} tmpmount/.
exit_if_error $? "Copying `basename ${UBOOT_IMG}`"
sudo cp ${KERNEL} tmpmount/zImage
exit_if_error $? "Copying `basename ${KERNEL}`"
sudo cp ${UINITRD} tmpmount/.
exit_if_error $? "Copying `basename ${UINITRD}`"
echo "rdsize='${RAMDISK_SIZE}'" > ${DEPLOY_DIR}/uEnv.txt
sudo cp ${DEPLOY_DIR}/uEnv.txt tmpmount/.

sudo cp ${DTB_FILEQ} tmpmount/imx6q-novasomP.dtb
exit_if_error $? "Copying `basename ${DTB_FILEQ}`"
sudo cp ${DTB_FILESDL} tmpmount/imx6sdl-novasomP.dtb
exit_if_error $? "Copying `basename ${DTB_FILESDL}`"
#TEMP
sudo cp  /Devel/NOVAsdk/Kernels/${KERNEL_IS}/arch/arm/boot/dts/imx6dl-novasomp.dtb tmpmount/imx6sdl-novasomP.dtb
#TEMP END
mkimage -C none -A arm -T script -d /Devel/NOVAsdk/Utils/nxp/boot-p.cmd /tmp/boot.scr
sudo cp  /tmp/boot.scr tmpmount/.
sudo cp  /tmp/boot.scr ${DEPLOY_DIR}


sudo umount tmpmount
sync
cd ${DEPLOY_DIR}
rm -f SPL u-boot.img zImage imx6q-novasomP.dtb imx6sdl-novasomP.dtb
ln -s $SPL_FILE
ln -s $UBOOT_IMG
ln -s $KERNEL
ln -s $DTB_FILESDL imx6sdl-novasomP.dtb
ln -s $DTB_FILEQ imx6q-novasomP.dtb

echo "Write finished succesfully"
exit_ok
